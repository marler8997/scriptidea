#!/usr/bin/env stitch
#
# NOTE: this script is ported from https://tldp.org/LDP/abs/html/sha-bang.html
#

# setup for test
mkdir -p @scriptdir/scratch
(@echo a message) @pipe (@stdin2file @scriptdir/scratch/messages)


# modified log_dir so we don't require root access
#log_dir = /var/log
log_dir = @scriptdir/scratch

root_uid = 0           # Only users with $UID 0 have root privileges.
save_line_count = 50   # Default number of lines saved.
error_cd = 86          # Can't change directory?
error_notroot = 87     # Non-root exit error.

# Run as root, of course.
@if @not ((@getuid) @eq $root_uid)
  @note Original script required it to be run as root user, but this one is modified
  @note skipping @exit $error_notroot
@end

#if [ -n "$1" ]
## Test whether command-line argument is present (non-empty).
#then
#  save_line_count=$1
#else  
#  save_line_count=$save_line_count # Default, if not specified on command-line.
#fi  
#
#
##  Stephane Chazelas suggests the following,
##+ as a better way of checking command-line arguments,
##+ but this is still a bit advanced for this stage of the tutorial.
##
##    E_WRONGARGS=85  # Non-numerical argument (bad argument format).
##
##    case "$1" in
##    ""      ) save_line_count=50;;
##    *[!0-9]*) echo "Usage: `basename $0` lines-to-cleanup";
##     exit $E_WRONGARGS;;
##    *       ) save_line_count=$1;;
##    esac
##
##* Skip ahead to "Loops" chapter to decipher all this.
#
#
#cd $log_dir
#
#if [ `pwd` != "$log_dir" ]  # or   if [ "$PWD" != "$log_dir" ]
#                            # Not in /var/log?
#then
#  echo "Can't change to $log_dir."
#  exit $error_cd
#fi  # Doublecheck if in right directory before messing with log file.
#
## Far more efficient is:
##
## cd /var/log || {
##   echo "Cannot change to necessary directory." >&2
##   exit $error_cd;
## }




(tail -n $save_line_count $log_dir/messages) @pipe (@stdin2file $log_dir/mesg.temp) # Save last section of message log file.
mv $log_dir/mesg.temp $log_dir/messages               # Rename it as system log file.


(cat /dev/null) @pipe (@stdin2file $log_dir/wtmp)
echo "Log files cleaned up."
#  Note that there are other log files in $log_dir not affected
#+ by this script.

# cleanup the scratch test directory
rm -rf @scriptdir/scratch

@exit 0
#  A zero return value from the script upon exit indicates success
#+ to the shell.
